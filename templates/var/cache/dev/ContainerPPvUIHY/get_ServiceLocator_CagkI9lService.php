<?php

namespace ContainerPPvUIHY;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class get_ServiceLocator_CagkI9lService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.cagkI9l' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.cagkI9l'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'App\\Controller\\HomepageController::listAction' => ['privates', '.service_locator.GQZbvNR', 'get_ServiceLocator_GQZbvNRService', true],
            'App\\Controller\\LoginController::index' => ['privates', '.service_locator.zFcJjKU', 'get_ServiceLocator_ZFcJjKUService', true],
            'App\\Controller\\RegistrationController::register' => ['privates', '.service_locator.YU8H6ve', 'get_ServiceLocator_YU8H6veService', true],
            'App\\Controller\\TodoController::DetailsAction' => ['privates', '.service_locator.GQZbvNR', 'get_ServiceLocator_GQZbvNRService', true],
            'App\\Controller\\TodoController::createAction' => ['privates', '.service_locator.aUsFPsv', 'get_ServiceLocator_AUsFPsvService', true],
            'App\\Controller\\TodoController::deleteAction' => ['privates', '.service_locator.GQZbvNR', 'get_ServiceLocator_GQZbvNRService', true],
            'App\\Controller\\TodoController::editAction' => ['privates', '.service_locator.GQZbvNR', 'get_ServiceLocator_GQZbvNRService', true],
            'App\\Controller\\TodoController::listAction' => ['privates', '.service_locator.GQZbvNR', 'get_ServiceLocator_GQZbvNRService', true],
            'App\\Controller\\UserController::index' => ['privates', '.service_locator.zFcJjKU', 'get_ServiceLocator_ZFcJjKUService', true],
            'App\\Controller\\UserController::onAuthenticationSuccess' => ['privates', '.service_locator.pGsgVxs', 'get_ServiceLocator_PGsgVxsService', true],
            'App\\Kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel::registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'App\\Controller\\HomepageController:listAction' => ['privates', '.service_locator.GQZbvNR', 'get_ServiceLocator_GQZbvNRService', true],
            'App\\Controller\\LoginController:index' => ['privates', '.service_locator.zFcJjKU', 'get_ServiceLocator_ZFcJjKUService', true],
            'App\\Controller\\RegistrationController:register' => ['privates', '.service_locator.YU8H6ve', 'get_ServiceLocator_YU8H6veService', true],
            'App\\Controller\\TodoController:DetailsAction' => ['privates', '.service_locator.GQZbvNR', 'get_ServiceLocator_GQZbvNRService', true],
            'App\\Controller\\TodoController:createAction' => ['privates', '.service_locator.aUsFPsv', 'get_ServiceLocator_AUsFPsvService', true],
            'App\\Controller\\TodoController:deleteAction' => ['privates', '.service_locator.GQZbvNR', 'get_ServiceLocator_GQZbvNRService', true],
            'App\\Controller\\TodoController:editAction' => ['privates', '.service_locator.GQZbvNR', 'get_ServiceLocator_GQZbvNRService', true],
            'App\\Controller\\TodoController:listAction' => ['privates', '.service_locator.GQZbvNR', 'get_ServiceLocator_GQZbvNRService', true],
            'App\\Controller\\UserController:index' => ['privates', '.service_locator.zFcJjKU', 'get_ServiceLocator_ZFcJjKUService', true],
            'App\\Controller\\UserController:onAuthenticationSuccess' => ['privates', '.service_locator.pGsgVxs', 'get_ServiceLocator_PGsgVxsService', true],
            'kernel:loadRoutes' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
            'kernel:registerContainerConfiguration' => ['privates', '.service_locator.xUrKPVU', 'get_ServiceLocator_XUrKPVUService', true],
        ], [
            'App\\Controller\\HomepageController::listAction' => '?',
            'App\\Controller\\LoginController::index' => '?',
            'App\\Controller\\RegistrationController::register' => '?',
            'App\\Controller\\TodoController::DetailsAction' => '?',
            'App\\Controller\\TodoController::createAction' => '?',
            'App\\Controller\\TodoController::deleteAction' => '?',
            'App\\Controller\\TodoController::editAction' => '?',
            'App\\Controller\\TodoController::listAction' => '?',
            'App\\Controller\\UserController::index' => '?',
            'App\\Controller\\UserController::onAuthenticationSuccess' => '?',
            'App\\Kernel::loadRoutes' => '?',
            'App\\Kernel::registerContainerConfiguration' => '?',
            'kernel::loadRoutes' => '?',
            'kernel::registerContainerConfiguration' => '?',
            'App\\Controller\\HomepageController:listAction' => '?',
            'App\\Controller\\LoginController:index' => '?',
            'App\\Controller\\RegistrationController:register' => '?',
            'App\\Controller\\TodoController:DetailsAction' => '?',
            'App\\Controller\\TodoController:createAction' => '?',
            'App\\Controller\\TodoController:deleteAction' => '?',
            'App\\Controller\\TodoController:editAction' => '?',
            'App\\Controller\\TodoController:listAction' => '?',
            'App\\Controller\\UserController:index' => '?',
            'App\\Controller\\UserController:onAuthenticationSuccess' => '?',
            'kernel:loadRoutes' => '?',
            'kernel:registerContainerConfiguration' => '?',
        ]);
    }
}
